services:
  vault:
    image: hashicorp/vault:1.13.3
    container_name: vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    command: vault server -config=/vault/config/config.hcl
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault/config:/vault/config
      - ./vault/file:/vault/file
      - ./vault/logs:/vault/logs
      - ./vault/certs:/vault/certs:ro

  sqlserver:
      image: mcr.microsoft.com/mssql/server:2022-latest
      container_name: sqlserver
      restart: unless-stopped
      environment:
        SA_PASSWORD: "Your_strong_password123"
        ACCEPT_EULA: "Y"
      ports:
        - "1433:1433"
      volumes:
        - ./sqlserver/data:/var/opt/mssql/data
        - ./logs/sqlserver:/var/opt/mssql/log


  mongo:
    image: mongo:8.0.12
    container_name: focuswave_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: focuswave_db
    volumes:
      - mongo_data:/data/db
      - ./logs/mongo:/var/log/mongodb

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.2.15
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.2.15
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - ./logs/kafka:/var/log/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - ./logs:/app/logs:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki


volumes:
  mongo_data:
  grafana-data:


