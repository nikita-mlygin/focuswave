// <auto-generated />
using System;
using Focuswave.SessionTrackingService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Focuswave.SessionTrackingService.Migrations
{
    [DbContext(typeof(SessionTrackingDbContext))]
    partial class SessionTrackingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Focuswave.SessionTrackingService.Models.FocusCycle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FocusCycles", (string)null);
                });

            modelBuilder.Entity("Focuswave.SessionTrackingService.Models.FocusCycleSegment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("PlannedDuration")
                        .HasColumnType("time");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CycleId", "Index")
                        .IsUnique();

                    b.HasIndex("CycleId", "StartedAt");

                    b.ToTable("FocusCycleSegments", (string)null);
                });

            modelBuilder.Entity("Focuswave.SessionTrackingService.Models.FocusCycleSegment", b =>
                {
                    b.HasOne("Focuswave.SessionTrackingService.Models.FocusCycle", "Cycle")
                        .WithMany()
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cycle");
                });
#pragma warning restore 612, 618
        }
    }
}
